[tox]
envlist =
    clean,
    check,
    {py35},
    docs

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py35: {env:TOXPYTHON:python3.5}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    {py36,docs,spell}: {env:TOXPYTHON:python3.6}
    {lxml_support,bootstrap,clean,check,report,coveralls,codecov}: python3
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    pytest-travis-fold
    pytest-cov
    setuptools_scm
    coverage
commands =
    pytest --cov=mlx --cov-report=term-missing -vv tests/
    mlx-warnings -h
    mlx-warnings --version
    python -c 'import mlx.warnings;print(mlx.warnings.__version__)'
    python -m mlx.warnings -h
    python -m mlx.warnings --version
    python -m mlx.warnings -j --maxwarnings 3 --minwarnings 3 tests/test_in/junit*.xml
    python -m mlx.warnings -j --maxwarnings 3 --minwarnings 3 "tests/test_in/junit*.xml"  #emulate for windows (no shell expansion)
    python -m mlx.warnings -j --command --maxwarnings 2 --minwarnings 2 cat tests/test_in/junit_double_fail.xml

[testenv:lxml_support]
deps =
    pytest
    lxml
commands =
    pytest -vv tests/

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-plantuml
    junitparser>=1.0.0
commands =
    sphinx-build {posargs:-E} -b doctest docs dist/docs
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    twine >= 1.12.0
    readme-renderer
    flake8
    pygments
    check-manifest
skip_install = true
commands =
    python setup.py sdist bdist
    twine check dist/*
    check-manifest {toxinidir}
    flake8 src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage
