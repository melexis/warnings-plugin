Search.setIndex({"docnames": ["authors", "contributing", "design", "index", "installation", "readme"], "filenames": ["authors.rst", "contributing.rst", "design.rst", "index.rst", "installation.rst", "readme.rst"], "titles": ["Authors", "Contribution Guide", "Software Design", "Contents", "Installation Guide", "Command Line Warnings Plugin"], "terms": {"melexi": [0, 2, 4, 5], "warn": [0, 1, 2, 3, 4], "plugin": [0, 1, 2, 3, 4], "i": [0, 1, 2, 4, 5], "mainli": 0, "maintain": 0, "bavo": 0, "van": 0, "acht": 0, "crt": 0, "mori": 0, "stein": 0, "heselman": 0, "jasper": 0, "craegh": 0, "anyon": [1, 5], "more": [1, 2, 5], "than": 1, "welcom": 1, "develop": [1, 5], "matter": [1, 5], "your": [1, 5], "program": 1, "skill": 1, "level": [1, 2], "It": [1, 5], "": [1, 2, 5], "oblig": 1, "help": [1, 5], "bring": 1, "our": [1, 2, 5], "desir": 1, "you": [1, 4, 5], "should": [1, 5], "do": [1, 5], "best": 1, "understand": 1, "decis": 1, "standard": 1, "github": [1, 4, 5], "flow": 1, "us": [1, 2, 5], "http": [1, 4, 5], "com": [1, 4, 5], "introduct": 1, "pull": 1, "which": [1, 2, 5], "ar": [1, 2, 4, 5], "merg": 1, "we": [1, 2, 4, 5], "also": [1, 5], "prefer": 1, "make": 1, "work": 1, "In": [1, 5], "progress": 1, "onc": [1, 4], "just": [1, 5], "case": [1, 2, 4, 5], "someon": 1, "els": [1, 2], "same": [1, 5], "There": [1, 5], "mai": [1, 5], "few": [1, 5], "open": [1, 2, 4, 5], "some": [1, 5], "own": 1, "suggest": [1, 5], "The": [1, 2, 5], "want": [1, 2, 5], "label": 1, "indic": 1, "an": [1, 4, 5], "easi": 1, "enough": 1, "task": 1, "so": [1, 2, 4, 5], "go": 1, "pick": 1, "up": 1, "feel": 1, "most": 1, "excit": 1, "about": [1, 5], "implement": [1, 2, 5], "all": [1, 2], "need": [1, 2, 4, 5], "properli": 1, "test": [1, 2], "target": [1, 2], "coverag": 1, "percentag": 1, "rather": 1, "focu": 1, "regress": 1, "confirm": 1, "expect": [1, 2], "function": [1, 2, 5], "border": 1, "thi": [1, 2, 5], "u": [1, 5], "keep": [1, 5], "exist": [1, 2, 5], "even": [1, 5], "after": [1, 2, 5], "year": 1, "constant": 1, "fix": 1, "bug": [1, 5], "basic": [1, 5], "everi": [1, 5], "bit": 1, "detail": [1, 5], "can": [1, 2, 5], "includ": [1, 2, 5], "futur": 1, "might": [1, 5], "look": [1, 5], "obviou": 1, "everyon": 1, "correctli": 1, "intend": 1, "thei": [1, 5], "aspect": 1, "check": [1, 2], "benefit": 1, "from": [1, 2, 4, 5], "fresh": 1, "ey": 1, "improv": 1, "rememb": 1, "act": 1, "polit": 1, "sinc": [1, 5], "peopl": 1, "frequent": 1, "contributor": 1, "variou": [1, 5], "repositori": [1, 5], "intimid": 1, "them": [1, 5], "learn": 1, "pleas": [1, 2, 4, 5], "have": [1, 4, 5], "ani": [1, 4, 5], "problem": [1, 4, 5], "happi": 1, "soon": 1, "possibl": [1, 5], "If": [1, 2, 5], "know": 1, "where": [1, 2], "enhanc": 1, "when": [1, 2, 5], "time": [1, 5], "fit": 1, "view": 1, "convent": 2, "plain": 2, "python": [2, 4, 5], "everywher": 2, "convert": 2, "anyth": 2, "exampl": [2, 3], "junitpars": 2, "byte": 2, "arrai": 2, "object": 2, "encod": 2, "right": 2, "befor": 2, "pass": [2, 3], "fork": 2, "mlx": [2, 4], "coveritycheck": 2, "verbos": 2, "fals": [2, 5], "sourc": [2, 5], "base": [2, 4], "regexcheck": 2, "classif": 2, "unclassifi": 2, "content": 2, "count": 2, "number": [2, 5], "adopt": 2, "cover": 2, "output": [2, 5], "paramet": 2, "str": 2, "pars": 2, "name": [2, 5], "pattern": [2, 5], "re": 2, "compil": 2, "A": 2, "za": 2, "z": 2, "d": [2, 5], "cid": 2, "p": 2, "curr": 2, "max": [2, 5], "checker": [2, 5], "w": 2, "n": 2, "doxycheck": 2, "doxygen": 2, "path1": 2, "line1": 2, "severity1": 2, "ww": 2, "arn": 2, "ee": 2, "rror": 2, "line2": 2, "severity2": 2, "description1": 2, "nn": 2, "otic": 2, "junitcheck": 2, "warningscheck": 2, "junit": 2, "failur": 2, "specif": [2, 5], "text": [2, 5], "static": [2, 5], "prepare_tre": 2, "root_input": 2, "prepar": 2, "tree": 2, "element": 2, "ad": [2, 5], "testsuit": 2, "root": 2, "miss": [2, 5], "junitxml": 2, "lxml": 2, "etre": 2, "_element": 2, "xml": [2, 5], "elementtre": 2, "top": 2, "input": [2, 5], "file": [2, 3], "return": [2, 5], "tag": 2, "polyspacecheck": 2, "tsv": [2, 5], "export": 2, "polyspac": 2, "_io": 2, "textiowrapp": 2, "properti": 2, "counted_warn": 2, "list": [2, 5], "type": [2, 5], "cq_description_templ": [2, 5], "templat": [2, 5], "instanc": 2, "configur": [2, 3], "maximum": [2, 5], "get": [2, 3, 5], "highest": 2, "minimum": [2, 5], "amount": [2, 5], "int": 2, "lowest": 2, "parse_config": 2, "config": [2, 5], "dict": 2, "extract": 2, "previous": 2, "json": [2, 5], "yaml": [2, 5], "yml": [2, 5], "arg": 2, "rais": [2, 5], "valueerror": 2, "valu": [2, 5], "kei": [2, 5], "repres": [2, 5], "famili": [2, 5], "column": [2, 5], "These": [2, 5], "consist": [2, 5], "3": 2, "pair": 2, "note": [2, 5], "min": [2, 5], "defin": [2, 5], "default": [2, 5], "0": [2, 5], "value_to_check": 2, "return_check_limit": 2, "whether": 2, "within": [2, 5], "limit": [2, 5], "otherwis": [2, 5], "1": [2, 5], "return_count": 2, "getter": 2, "found": [2, 5], "polyspacefamilycheck": 2, "family_valu": 2, "column_nam": 2, "check_valu": 2, "kwarg": 2, "add_code_quality_find": 2, "row": [2, 5], "add": [2, 5], "code": [2, 3], "qualiti": [2, 3], "find": [2, 5], "correspond": [2, 5], "colomn": 2, "csv": [2, 5], "code_quality_sever": 2, "impact": [2, 5], "high": [2, 5], "critic": 2, "low": [2, 5], "minor": 2, "medium": [2, 5], "major": 2, "orang": [2, 5], "red": [2, 5], "robotcheck": 2, "robot": 2, "framework": 2, "suit": [2, 5], "robotsuitecheck": 2, "check_suite_nam": [2, 5], "classnam": 2, "doe": 2, "end": 2, "attribut": 2, "ignor": [2, 5], "systemexit": 2, "No": 2, "self": 2, "error": 2, "sphinxcheck": 2, "include_sphinx_deprec": 2, "sphinx_deprecation_regex": 2, "alter": 2, "main": 2, "sphinx": 2, "m": [2, 5], "none": 2, "debug": 2, "info": 2, "sever": [2, 5], "multilin": 2, "sphinx_deprecation_regex_in_match": 2, "removedinsphinx": [2, 5], "add_pattern": 2, "regex": 2, "pattern_contain": 2, "specifi": [2, 5], "contain": [2, 5], "storag": 2, "abstract": 2, "print_when_verbos": 2, "messag": [2, 5], "print": [2, 5], "onli": [2, 5], "mode": 2, "enabl": [2, 5], "condition": 2, "except": 2, "warningsconfigerror": 2, "warningsplugin": 2, "config_fil": 2, "cq_enabl": 2, "activate_check": 2, "activ": [2, 5], "addit": 2, "initi": [2, 5], "activate_checker_nam": 2, "given": [2, 5], "check_logfil": 2, "config_pars": 2, "configure_maximum": 2, "each": [2, 5], "allow": [2, 5], "configure_minimum": 2, "get_check": 2, "determin": 2, "script": [2, 5], "set": [2, 5], "regist": 2, "sum": 2, "toggle_printout": 2, "printout": 2, "toggl": 2, "command": [2, 3, 4], "well": [2, 5], "bool": 2, "true": [2, 5], "provid": [2, 5], "silent": 2, "write_code_quality_report": 2, "out_fil": 2, "gener": [2, 5], "report": [2, 3], "artifact": [2, 5], "subset": [2, 5], "climat": [2, 5], "spec": [2, 5], "locat": 2, "write_counted_warn": 2, "write": [2, 5], "xmlrunnercheck": 2, "xmlrunner": 2, "fail": [2, 5], "warnings_wrapp": 2, "line": [3, 4], "instal": 3, "usag": 3, "pipe": 3, "run": [3, 4], "simpl": [3, 4], "option": 3, "other": 3, "issu": [3, 4], "new": 3, "featur": 3, "contribut": 3, "guid": [3, 5], "softwar": 3, "design": 3, "class": 3, "diagram": 3, "string": [3, 5], "handl": [3, 5], "instrument": 3, "modul": [3, 5], "start": [3, 5], "document": [3, 5], "review": 3, "request": 3, "author": 3, "index": 3, "search": 3, "page": 3, "avail": [4, 5], "packag": [4, 5], "pypi": 4, "offer": 4, "direct": [4, 5], "invoc": 4, "infront": 4, "releas": [4, 5], "version": [4, 5], "pip3": [4, 5], "edit": 4, "master": [4, 5], "branch": [4, 5], "git": [4, 5], "clone": 4, "e": [4, 5], "far": 4, "awar": [4, 5], "altern": 5, "jenkinsci": 5, "useabl": 5, "less": 5, "ci": 5, "system": 5, "gitlab": 5, "threshold": 5, "job": 5, "tool": 5, "upload": 5, "pip": 5, "simpli": 5, "python3": 5, "log": 5, "stream": 5, "creat": 5, "redirect": 5, "stderr": 5, "shell": 5, "argument": 5, "support": 5, "instead": 5, "Be": 5, "stdout": 5, "last": 5, "discard": 5, "becaus": 5, "consid": 5, "without": 5, "flag": 5, "below": 5, "one": 5, "wai": 5, "save": 5, "insid": 5, "yourcommand": 5, "2": 5, "tee": 5, "doc_log": 5, "txt": 5, "mind": 5, "requir": 5, "plai": 5, "comput": 5, "virtualenv": 5, "separ": 5, "per": 5, "project": 5, "chanc": 5, "depend": 5, "hell": 5, "virtual": 5, "environ": 5, "current": 5, "directori": 5, "call": 5, "directli": 5, "consol": 5, "h": 5, "ha": 5, "like": 5, "variabl": 5, "suppli": 5, "ok": 5, "posit": 5, "counter": 5, "those": 5, "two": 5, "form": 5, "individu": 5, "flexibl": 5, "traceabl": 5, "resid": 5, "adjust": 5, "execut": 5, "commandforsphinx": 5, "explicitli": 5, "commandfordoxygen": 5, "analysi": 5, "desktop": 5, "local": 5, "chang": 5, "back": 5, "affect": 5, "between": 5, "forward": 5, "cov": 5, "style": 5, "onelin": 5, "diff": 5, "submodul": 5, "logfil": 5, "through": 5, "commandforcover": 5, "junit_output": 5, "commandforjunit": 5, "mark": 5, "exit": 5, "could": 5, "detect": 5, "did": 5, "now": 5, "xmlrunner_log": 5, "commandforxmlrunn": 5, "xunit": 5, "compat": 5, "By": 5, "taken": 5, "account": 5, "care": 5, "doesn": 5, "t": 5, "multipl": 5, "mean": 5, "instruct": 5, "follow": 5, "format": 5, "dir": 5, "resultsfold": 5, "export_opt": 5, "host": 5, "hostnam": 5, "id": 5, "runid": 5, "polyspace_access_opt": 5, "tab": 5, "inform": 5, "r2024a": 5, "group": 5, "color": 5, "statu": 5, "comment": 5, "col": 5, "previou": 5, "yet": 5, "cannot": 5, "togeth": 5, "For": 5, "prover": 5, "finder": 5, "global": 5, "demonstr": 5, "how": 5, "configuration_fil": 5, "tsv_file": 5, "path": 5, "code_qu": 5, "besid": 5, "structur": 5, "via": 5, "g": 5, "max_sphinx_warn": 5, "cq_default_path": 5, "doc": 5, "conf": 5, "py": 5, "product": 5, "descript": 5, "doxyfil": 5, "min_doxy_warn": 5, "max_doxy_warn": 5, "my": 5, "first": 5, "8": 5, "10": 5, "second": 5, "tdummy_funct": 5, "tdummy_file_nam": 5, "c": 5, "checkernam": 5, "boolean": 5, "expans": 5, "To": 5, "under": 5, "fast": 5, "import": 5, "still": 5, "accept": 5, "success": 5, "exact": 5, "singl": 5, "certain": 5, "regular": 5, "express": 5, "basi": 5, "won": 5, "toctre": 5, "against": 5, "concaten": 5, "cell": 5, "charact": 5, "backslash": 5, "escap": 5, "syntax": 5, "special": 5, "let": 5, "behavior": 5, "o": 5, "file_path": 5, "irrelev": 5, "produc": 5, "codequ": 5, "fallback": 5, "custom": 5, "see": 5, "Its": 5, "access": 5, "home": 5, "field": 5, "titl": 5, "lowercas": 5, "fingerprint": 5, "uniqu": 5, "identifi": 5, "transient": 5, "remain": 5, "hash": 5, "md5": 5, "mani": 5, "valid": 5, "resolv": 5, "faster": 5, "would": 5, "hear": 5, "continu": 5, "integr": 5, "better": 5, "involv": 5, "encourag": 5}, "objects": {"mlx": [[2, 0, 0, "-", "warnings"]], "mlx.warnings": [[2, 1, 1, "", "CoverityChecker"], [2, 1, 1, "", "DoxyChecker"], [2, 1, 1, "", "JUnitChecker"], [2, 1, 1, "", "PolyspaceChecker"], [2, 1, 1, "", "PolyspaceFamilyChecker"], [2, 1, 1, "", "RobotChecker"], [2, 1, 1, "", "RobotSuiteChecker"], [2, 1, 1, "", "SphinxChecker"], [2, 1, 1, "", "WarningsChecker"], [2, 5, 1, "", "WarningsConfigError"], [2, 1, 1, "", "WarningsPlugin"], [2, 1, 1, "", "XMLRunnerChecker"], [2, 6, 1, "", "warnings_wrapper"]], "mlx.warnings.CoverityChecker": [[2, 2, 1, "", "CLASSIFICATION"], [2, 3, 1, "", "check"], [2, 2, 1, "", "name"], [2, 2, 1, "", "pattern"]], "mlx.warnings.DoxyChecker": [[2, 2, 1, "", "name"], [2, 2, 1, "", "pattern"]], "mlx.warnings.JUnitChecker": [[2, 3, 1, "", "check"], [2, 2, 1, "", "name"], [2, 3, 1, "", "prepare_tree"]], "mlx.warnings.PolyspaceChecker": [[2, 3, 1, "", "check"], [2, 2, 1, "", "checkers"], [2, 4, 1, "", "counted_warnings"], [2, 4, 1, "", "cq_description_template"], [2, 4, 1, "", "maximum"], [2, 4, 1, "", "minimum"], [2, 2, 1, "", "name"], [2, 3, 1, "", "parse_config"], [2, 3, 1, "", "return_check_limits"], [2, 3, 1, "", "return_count"]], "mlx.warnings.PolyspaceFamilyChecker": [[2, 3, 1, "", "add_code_quality_finding"], [2, 3, 1, "", "check"], [2, 2, 1, "", "code_quality_severity"], [2, 4, 1, "", "cq_description_template"], [2, 3, 1, "", "return_count"]], "mlx.warnings.RobotChecker": [[2, 3, 1, "", "check"], [2, 2, 1, "", "checkers"], [2, 4, 1, "", "counted_warnings"], [2, 4, 1, "", "maximum"], [2, 4, 1, "", "minimum"], [2, 2, 1, "", "name"], [2, 3, 1, "", "parse_config"], [2, 3, 1, "", "return_check_limits"], [2, 3, 1, "", "return_count"]], "mlx.warnings.RobotSuiteChecker": [[2, 3, 1, "", "check"], [2, 3, 1, "", "return_count"]], "mlx.warnings.SphinxChecker": [[2, 3, 1, "", "include_sphinx_deprecation"], [2, 2, 1, "", "name"], [2, 2, 1, "", "pattern"], [2, 2, 1, "", "sphinx_deprecation_regex"], [2, 2, 1, "", "sphinx_deprecation_regex_in_match"]], "mlx.warnings.WarningsChecker": [[2, 3, 1, "", "add_patterns"], [2, 3, 1, "", "check"], [2, 4, 1, "", "counted_warnings"], [2, 4, 1, "", "cq_description_template"], [2, 4, 1, "", "maximum"], [2, 4, 1, "", "minimum"], [2, 2, 1, "", "name"], [2, 3, 1, "", "parse_config"], [2, 3, 1, "", "print_when_verbose"], [2, 3, 1, "", "return_check_limits"], [2, 3, 1, "", "return_count"]], "mlx.warnings.WarningsPlugin": [[2, 3, 1, "", "activate_checker"], [2, 3, 1, "", "activate_checker_name"], [2, 3, 1, "", "check"], [2, 3, 1, "", "check_logfile"], [2, 3, 1, "", "config_parser"], [2, 3, 1, "", "configure_maximum"], [2, 3, 1, "", "configure_minimum"], [2, 3, 1, "", "get_checker"], [2, 3, 1, "", "return_check_limits"], [2, 3, 1, "", "return_count"], [2, 3, 1, "", "toggle_printout"], [2, 3, 1, "", "write_code_quality_report"], [2, 3, 1, "", "write_counted_warnings"]], "mlx.warnings.XMLRunnerChecker": [[2, 2, 1, "", "name"], [2, 2, 1, "", "pattern"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"author": 0, "contribut": [1, 5], "guid": [1, 4], "get": 1, "start": 1, "qualiti": [1, 5], "document": 1, "code": [1, 5], "review": 1, "report": [1, 5], "issu": [1, 5], "request": 1, "new": [1, 5], "featur": [1, 5], "softwar": 2, "design": 2, "class": 2, "diagram": 2, "string": 2, "handl": 2, "instrument": 2, "modul": 2, "content": 3, "indic": 3, "tabl": 3, "instal": [4, 5], "command": 5, "line": 5, "warn": 5, "plugin": 5, "usag": 5, "pipe": 5, "exampl": 5, "run": 5, "simpl": 5, "option": 5, "pars": 5, "sphinx": 5, "doxygen": 5, "cover": 5, "defect": 5, "junit": 5, "failur": 5, "xmlrunner": 5, "error": 5, "robot": 5, "framework": 5, "test": 5, "polyspac": 5, "export": 5, "result": 5, "configur": 5, "check": 5, "mlx": 5, "file": 5, "pass": 5, "other": 5, "exclud": 5, "match": 5, "With": 5, "regex": 5, "deprec": 5, "store": 5, "all": 5, "count": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Authors": [[0, "authors"]], "Contribution Guide": [[1, "contribution-guide"]], "Getting Started": [[1, "getting-started"]], "Quality of Contribution": [[1, "quality-of-contribution"]], "Documentation": [[1, "documentation"]], "Code Review": [[1, "code-review"]], "Reporting Issues or Requesting a New Feature": [[1, "reporting-issues-or-requesting-a-new-feature"]], "Software Design": [[2, "software-design"]], "Class Diagram": [[2, "class-diagram"]], "String Handling": [[2, "string-handling"]], "Instrument Module": [[2, "module-mlx.warnings"]], "Contents": [[3, "contents"]], "Indices and Tables": [[3, "indices-and-tables"]], "Installation Guide": [[4, "installation-guide"]], "Command Line Warnings Plugin": [[5, "command-line-warnings-plugin"]], "Installation": [[5, "installation"]], "Usage": [[5, "usage"]], "Pipe Example": [[5, "pipe-example"]], "Command Example": [[5, "command-example"]], "Running Command": [[5, "running-command"]], "Simple Command Line Options": [[5, "simple-command-line-options"]], "Parse for Sphinx Warnings": [[5, "parse-for-sphinx-warnings"]], "Parse for Doxygen Warnings": [[5, "parse-for-doxygen-warnings"]], "Parse for Coverity Defects": [[5, "parse-for-coverity-defects"]], "Parse for JUnit Failures": [[5, "parse-for-junit-failures"]], "Parse for XMLRunner Errors": [[5, "parse-for-xmlrunner-errors"]], "Parse for Robot Framework Test Failures": [[5, "parse-for-robot-framework-test-failures"]], "Parse for Polyspace Failures": [[5, "parse-for-polyspace-failures"]], "Exporting Polyspace Results": [[5, "exporting-polyspace-results"]], "Configuration": [[5, "configuration"]], "Example Checks": [[5, "example-checks"]], "Running the mlx-warnings plugin": [[5, "running-the-mlx-warnings-plugin"]], "Configuration File to Pass Options": [[5, "configuration-file-to-pass-options"]], "Other Options": [[5, "other-options"]], "Exclude Matches With Regexes": [[5, "exclude-matches-with-regexes"]], "Exclude Sphinx Deprecation Warnings": [[5, "exclude-sphinx-deprecation-warnings"]], "Store All Counted Warnings": [[5, "store-all-counted-warnings"]], "Code Quality Report": [[5, "code-quality-report"]], "Issues and New Features": [[5, "issues-and-new-features"]], "Contribute": [[5, "contribute"]]}, "indexentries": {"classification (mlx.warnings.coveritychecker attribute)": [[2, "mlx.warnings.CoverityChecker.CLASSIFICATION"]], "coveritychecker (class in mlx.warnings)": [[2, "mlx.warnings.CoverityChecker"]], "doxychecker (class in mlx.warnings)": [[2, "mlx.warnings.DoxyChecker"]], "junitchecker (class in mlx.warnings)": [[2, "mlx.warnings.JUnitChecker"]], "polyspacechecker (class in mlx.warnings)": [[2, "mlx.warnings.PolyspaceChecker"]], "polyspacefamilychecker (class in mlx.warnings)": [[2, "mlx.warnings.PolyspaceFamilyChecker"]], "robotchecker (class in mlx.warnings)": [[2, "mlx.warnings.RobotChecker"]], "robotsuitechecker (class in mlx.warnings)": [[2, "mlx.warnings.RobotSuiteChecker"]], "sphinxchecker (class in mlx.warnings)": [[2, "mlx.warnings.SphinxChecker"]], "warningschecker (class in mlx.warnings)": [[2, "mlx.warnings.WarningsChecker"]], "warningsconfigerror": [[2, "mlx.warnings.WarningsConfigError"]], "warningsplugin (class in mlx.warnings)": [[2, "mlx.warnings.WarningsPlugin"]], "xmlrunnerchecker (class in mlx.warnings)": [[2, "mlx.warnings.XMLRunnerChecker"]], "activate_checker() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.activate_checker"]], "activate_checker_name() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.activate_checker_name"]], "add_code_quality_finding() (mlx.warnings.polyspacefamilychecker method)": [[2, "mlx.warnings.PolyspaceFamilyChecker.add_code_quality_finding"]], "add_patterns() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.add_patterns"]], "check() (mlx.warnings.coveritychecker method)": [[2, "mlx.warnings.CoverityChecker.check"]], "check() (mlx.warnings.junitchecker method)": [[2, "mlx.warnings.JUnitChecker.check"]], "check() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.check"]], "check() (mlx.warnings.polyspacefamilychecker method)": [[2, "mlx.warnings.PolyspaceFamilyChecker.check"]], "check() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.check"]], "check() (mlx.warnings.robotsuitechecker method)": [[2, "mlx.warnings.RobotSuiteChecker.check"]], "check() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.check"]], "check() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.check"]], "check_logfile() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.check_logfile"]], "checkers (mlx.warnings.polyspacechecker attribute)": [[2, "mlx.warnings.PolyspaceChecker.checkers"]], "checkers (mlx.warnings.robotchecker attribute)": [[2, "mlx.warnings.RobotChecker.checkers"]], "code_quality_severity (mlx.warnings.polyspacefamilychecker attribute)": [[2, "mlx.warnings.PolyspaceFamilyChecker.code_quality_severity"]], "config_parser() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.config_parser"]], "configure_maximum() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.configure_maximum"]], "configure_minimum() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.configure_minimum"]], "counted_warnings (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.counted_warnings"]], "counted_warnings (mlx.warnings.robotchecker property)": [[2, "mlx.warnings.RobotChecker.counted_warnings"]], "counted_warnings (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.counted_warnings"]], "cq_description_template (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.cq_description_template"]], "cq_description_template (mlx.warnings.polyspacefamilychecker property)": [[2, "mlx.warnings.PolyspaceFamilyChecker.cq_description_template"]], "cq_description_template (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.cq_description_template"]], "get_checker() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.get_checker"]], "include_sphinx_deprecation() (mlx.warnings.sphinxchecker method)": [[2, "mlx.warnings.SphinxChecker.include_sphinx_deprecation"]], "maximum (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.maximum"]], "maximum (mlx.warnings.robotchecker property)": [[2, "mlx.warnings.RobotChecker.maximum"]], "maximum (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.maximum"]], "minimum (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.minimum"]], "minimum (mlx.warnings.robotchecker property)": [[2, "mlx.warnings.RobotChecker.minimum"]], "minimum (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.minimum"]], "mlx.warnings": [[2, "module-mlx.warnings"]], "module": [[2, "module-mlx.warnings"]], "name (mlx.warnings.coveritychecker attribute)": [[2, "mlx.warnings.CoverityChecker.name"]], "name (mlx.warnings.doxychecker attribute)": [[2, "mlx.warnings.DoxyChecker.name"]], "name (mlx.warnings.junitchecker attribute)": [[2, "mlx.warnings.JUnitChecker.name"]], "name (mlx.warnings.polyspacechecker attribute)": [[2, "mlx.warnings.PolyspaceChecker.name"]], "name (mlx.warnings.robotchecker attribute)": [[2, "mlx.warnings.RobotChecker.name"]], "name (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.name"]], "name (mlx.warnings.warningschecker attribute)": [[2, "mlx.warnings.WarningsChecker.name"]], "name (mlx.warnings.xmlrunnerchecker attribute)": [[2, "mlx.warnings.XMLRunnerChecker.name"]], "parse_config() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.parse_config"]], "parse_config() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.parse_config"]], "parse_config() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.parse_config"]], "pattern (mlx.warnings.coveritychecker attribute)": [[2, "mlx.warnings.CoverityChecker.pattern"]], "pattern (mlx.warnings.doxychecker attribute)": [[2, "mlx.warnings.DoxyChecker.pattern"]], "pattern (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.pattern"]], "pattern (mlx.warnings.xmlrunnerchecker attribute)": [[2, "mlx.warnings.XMLRunnerChecker.pattern"]], "prepare_tree() (mlx.warnings.junitchecker static method)": [[2, "mlx.warnings.JUnitChecker.prepare_tree"]], "print_when_verbose() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.print_when_verbose"]], "return_check_limits() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.return_check_limits"]], "return_check_limits() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.return_check_limits"]], "return_check_limits() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.return_check_limits"]], "return_check_limits() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.return_check_limits"]], "return_count() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.return_count"]], "return_count() (mlx.warnings.polyspacefamilychecker method)": [[2, "mlx.warnings.PolyspaceFamilyChecker.return_count"]], "return_count() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.return_count"]], "return_count() (mlx.warnings.robotsuitechecker method)": [[2, "mlx.warnings.RobotSuiteChecker.return_count"]], "return_count() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.return_count"]], "return_count() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.return_count"]], "sphinx_deprecation_regex (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.sphinx_deprecation_regex"]], "sphinx_deprecation_regex_in_match (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.sphinx_deprecation_regex_in_match"]], "toggle_printout() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.toggle_printout"]], "warnings_wrapper() (in module mlx.warnings)": [[2, "mlx.warnings.warnings_wrapper"]], "write_code_quality_report() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.write_code_quality_report"]], "write_counted_warnings() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.write_counted_warnings"]]}})