Search.setIndex({"alltitles": {"Authors": [[0, null]], "Class Diagram": [[2, "class-diagram"]], "Code Quality Report": [[5, "code-quality-report"]], "Code Review": [[1, "code-review"]], "Code of Conduct": [[1, "code-of-conduct"]], "Command Example": [[5, "command-example"]], "Command Line Warnings Plugin": [[5, null]], "Configuration": [[5, "configuration"]], "Configuration File to Pass Options": [[5, "configuration-file-to-pass-options"]], "Contents": [[3, null]], "Contribute": [[5, "contribute"]], "Contribution Guide": [[1, null]], "Documentation": [[1, "documentation"]], "Example Checks": [[5, "example-checks"]], "Exclude Matches With Regexes": [[5, "exclude-matches-with-regexes"]], "Exclude Sphinx Deprecation Warnings": [[5, "exclude-sphinx-deprecation-warnings"]], "Exporting Polyspace Results": [[5, "exporting-polyspace-results"]], "Getting Started": [[1, "getting-started"]], "Indices and Tables": [[3, "indices-and-tables"]], "Installation": [[5, "installation"]], "Installation Guide": [[4, null]], "Instrument Module": [[2, "module-mlx.warnings"]], "Issues and New Features": [[5, "issues-and-new-features"]], "Other Options": [[5, "other-options"]], "Parse for Coverity Defects": [[5, "parse-for-coverity-defects"]], "Parse for Doxygen Warnings": [[5, "parse-for-doxygen-warnings"]], "Parse for JUnit Failures": [[5, "parse-for-junit-failures"]], "Parse for Polyspace Failures": [[5, "parse-for-polyspace-failures"]], "Parse for Robot Framework Test Failures": [[5, "parse-for-robot-framework-test-failures"]], "Parse for Sphinx Warnings": [[5, "parse-for-sphinx-warnings"]], "Parse for XMLRunner Errors": [[5, "parse-for-xmlrunner-errors"]], "Pipe Example": [[5, "pipe-example"]], "Quality of Contribution": [[1, "quality-of-contribution"]], "Reporting Issues or Requesting a New Feature": [[1, "reporting-issues-or-requesting-a-new-feature"]], "Reporting a Vulnerability": [[6, "reporting-a-vulnerability"]], "Running Command": [[5, "running-command"]], "Running the mlx-warnings plugin": [[5, "running-the-mlx-warnings-plugin"]], "Security Policy": [[6, null]], "Simple Command Line Options": [[5, "simple-command-line-options"]], "Software Design": [[2, null]], "Store All Counted Warnings": [[5, "store-all-counted-warnings"]], "String Handling": [[2, "string-handling"]], "Supported Versions": [[6, "supported-versions"]], "Usage": [[5, "usage"]]}, "docnames": ["authors", "contributing", "design", "index", "installation", "readme", "security"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["authors.rst", "contributing.rst", "design.rst", "index.rst", "installation.rst", "readme.rst", "security.rst"], "indexentries": {"activate_checker() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.activate_checker", false]], "activate_checker_name() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.activate_checker_name", false]], "add_code_quality_finding() (mlx.warnings.polyspacefamilychecker method)": [[2, "mlx.warnings.PolyspaceFamilyChecker.add_code_quality_finding", false]], "add_patterns() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.add_patterns", false]], "check() (mlx.warnings.coveritychecker method)": [[2, "mlx.warnings.CoverityChecker.check", false]], "check() (mlx.warnings.junitchecker method)": [[2, "mlx.warnings.JUnitChecker.check", false]], "check() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.check", false]], "check() (mlx.warnings.polyspacefamilychecker method)": [[2, "mlx.warnings.PolyspaceFamilyChecker.check", false]], "check() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.check", false]], "check() (mlx.warnings.robotsuitechecker method)": [[2, "mlx.warnings.RobotSuiteChecker.check", false]], "check() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.check", false]], "check() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.check", false]], "check_logfile() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.check_logfile", false]], "check_name (mlx.warnings.finding property)": [[2, "mlx.warnings.Finding.check_name", false]], "checkers (mlx.warnings.polyspacechecker attribute)": [[2, "mlx.warnings.PolyspaceChecker.checkers", false]], "code_quality_severity (mlx.warnings.polyspacefamilychecker attribute)": [[2, "mlx.warnings.PolyspaceFamilyChecker.code_quality_severity", false]], "column (mlx.warnings.finding property)": [[2, "mlx.warnings.Finding.column", false]], "config_parser() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.config_parser", false]], "configure_maximum() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.configure_maximum", false]], "configure_minimum() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.configure_minimum", false]], "coveritychecker (class in mlx.warnings)": [[2, "mlx.warnings.CoverityChecker", false]], "cq_description_template (mlx.warnings.coveritychecker property)": [[2, "mlx.warnings.CoverityChecker.cq_description_template", false]], "cq_description_template (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.cq_description_template", false]], "cq_description_template (mlx.warnings.polyspacefamilychecker property)": [[2, "mlx.warnings.PolyspaceFamilyChecker.cq_description_template", false]], "cq_description_template (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.cq_description_template", false]], "cq_findings (mlx.warnings.coveritychecker property)": [[2, "mlx.warnings.CoverityChecker.cq_findings", false]], "cq_findings (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.cq_findings", false]], "cq_findings (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.cq_findings", false]], "doxychecker (class in mlx.warnings)": [[2, "mlx.warnings.DoxyChecker", false]], "finding (class in mlx.warnings)": [[2, "mlx.warnings.Finding", false]], "fingerprint (mlx.warnings.finding property)": [[2, "mlx.warnings.Finding.fingerprint", false]], "fingerprints (mlx.warnings.finding attribute)": [[2, "mlx.warnings.Finding.fingerprints", false]], "get_checker() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.get_checker", false]], "ignored_testsuites (mlx.warnings.robotchecker property)": [[2, "mlx.warnings.RobotChecker.ignored_testsuites", false]], "include_sphinx_deprecation() (mlx.warnings.sphinxchecker method)": [[2, "mlx.warnings.SphinxChecker.include_sphinx_deprecation", false]], "is_sub_checker (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.is_sub_checker", false]], "junitchecker (class in mlx.warnings)": [[2, "mlx.warnings.JUnitChecker", false]], "line (mlx.warnings.finding property)": [[2, "mlx.warnings.Finding.line", false]], "logging_fmt (mlx.warnings.polyspacefamilychecker attribute)": [[2, "mlx.warnings.PolyspaceFamilyChecker.logging_fmt", false]], "logging_fmt (mlx.warnings.robotchecker attribute)": [[2, "mlx.warnings.RobotChecker.logging_fmt", false]], "logging_fmt (mlx.warnings.robotsuitechecker attribute)": [[2, "mlx.warnings.RobotSuiteChecker.logging_fmt", false]], "logging_fmt (mlx.warnings.warningschecker attribute)": [[2, "mlx.warnings.WarningsChecker.logging_fmt", false]], "maximum (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.maximum", false]], "maximum (mlx.warnings.robotchecker property)": [[2, "mlx.warnings.RobotChecker.maximum", false]], "maximum (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.maximum", false]], "minimum (mlx.warnings.polyspacechecker property)": [[2, "mlx.warnings.PolyspaceChecker.minimum", false]], "minimum (mlx.warnings.robotchecker property)": [[2, "mlx.warnings.RobotChecker.minimum", false]], "minimum (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.minimum", false]], "mlx.warnings": [[2, "module-mlx.warnings", false]], "module": [[2, "module-mlx.warnings", false]], "name (mlx.warnings.coveritychecker attribute)": [[2, "mlx.warnings.CoverityChecker.name", false]], "name (mlx.warnings.doxychecker attribute)": [[2, "mlx.warnings.DoxyChecker.name", false]], "name (mlx.warnings.junitchecker attribute)": [[2, "mlx.warnings.JUnitChecker.name", false]], "name (mlx.warnings.polyspacechecker attribute)": [[2, "mlx.warnings.PolyspaceChecker.name", false]], "name (mlx.warnings.polyspacefamilychecker attribute)": [[2, "mlx.warnings.PolyspaceFamilyChecker.name", false]], "name (mlx.warnings.robotchecker attribute)": [[2, "mlx.warnings.RobotChecker.name", false]], "name (mlx.warnings.robotsuitechecker attribute)": [[2, "mlx.warnings.RobotSuiteChecker.name", false]], "name (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.name", false]], "name (mlx.warnings.warningschecker attribute)": [[2, "mlx.warnings.WarningsChecker.name", false]], "name (mlx.warnings.xmlrunnerchecker attribute)": [[2, "mlx.warnings.XMLRunnerChecker.name", false]], "name_repr (mlx.warnings.junitchecker property)": [[2, "mlx.warnings.JUnitChecker.name_repr", false]], "name_repr (mlx.warnings.warningschecker property)": [[2, "mlx.warnings.WarningsChecker.name_repr", false]], "parse_config() (mlx.warnings.coveritychecker method)": [[2, "mlx.warnings.CoverityChecker.parse_config", false]], "parse_config() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.parse_config", false]], "parse_config() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.parse_config", false]], "parse_config() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.parse_config", false]], "path (mlx.warnings.finding property)": [[2, "mlx.warnings.Finding.path", false]], "pattern (mlx.warnings.coveritychecker attribute)": [[2, "mlx.warnings.CoverityChecker.pattern", false]], "pattern (mlx.warnings.doxychecker attribute)": [[2, "mlx.warnings.DoxyChecker.pattern", false]], "pattern (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.pattern", false]], "pattern (mlx.warnings.xmlrunnerchecker attribute)": [[2, "mlx.warnings.XMLRunnerChecker.pattern", false]], "polyspacechecker (class in mlx.warnings)": [[2, "mlx.warnings.PolyspaceChecker", false]], "polyspacefamilychecker (class in mlx.warnings)": [[2, "mlx.warnings.PolyspaceFamilyChecker", false]], "prepare_tree() (mlx.warnings.junitchecker static method)": [[2, "mlx.warnings.JUnitChecker.prepare_tree", false]], "return_check_limits() (mlx.warnings.coveritychecker method)": [[2, "mlx.warnings.CoverityChecker.return_check_limits", false]], "return_check_limits() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.return_check_limits", false]], "return_check_limits() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.return_check_limits", false]], "return_check_limits() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.return_check_limits", false]], "return_check_limits() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.return_check_limits", false]], "return_count() (mlx.warnings.coveritychecker method)": [[2, "mlx.warnings.CoverityChecker.return_count", false]], "return_count() (mlx.warnings.polyspacechecker method)": [[2, "mlx.warnings.PolyspaceChecker.return_count", false]], "return_count() (mlx.warnings.robotchecker method)": [[2, "mlx.warnings.RobotChecker.return_count", false]], "return_count() (mlx.warnings.warningschecker method)": [[2, "mlx.warnings.WarningsChecker.return_count", false]], "return_count() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.return_count", false]], "robotchecker (class in mlx.warnings)": [[2, "mlx.warnings.RobotChecker", false]], "robotsuitechecker (class in mlx.warnings)": [[2, "mlx.warnings.RobotSuiteChecker", false]], "severity (mlx.warnings.finding property)": [[2, "mlx.warnings.Finding.severity", false]], "sphinx_deprecation_regex (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.sphinx_deprecation_regex", false]], "sphinx_deprecation_regex_in_match (mlx.warnings.sphinxchecker attribute)": [[2, "mlx.warnings.SphinxChecker.sphinx_deprecation_regex_in_match", false]], "sphinxchecker (class in mlx.warnings)": [[2, "mlx.warnings.SphinxChecker", false]], "suite_name_repr (mlx.warnings.robotsuitechecker property)": [[2, "mlx.warnings.RobotSuiteChecker.suite_name_repr", false]], "to_dict() (mlx.warnings.finding method)": [[2, "mlx.warnings.Finding.to_dict", false]], "toggle_printout() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.toggle_printout", false]], "warnings_wrapper() (in module mlx.warnings)": [[2, "mlx.warnings.warnings_wrapper", false]], "warningschecker (class in mlx.warnings)": [[2, "mlx.warnings.WarningsChecker", false]], "warningsconfigerror": [[2, "mlx.warnings.WarningsConfigError", false]], "warningsplugin (class in mlx.warnings)": [[2, "mlx.warnings.WarningsPlugin", false]], "write_code_quality_report() (mlx.warnings.warningsplugin method)": [[2, "mlx.warnings.WarningsPlugin.write_code_quality_report", false]], "xmlrunnerchecker (class in mlx.warnings)": [[2, "mlx.warnings.XMLRunnerChecker", false]]}, "objects": {"mlx": [[2, 0, 0, "-", "warnings"]], "mlx.warnings": [[2, 1, 1, "", "CoverityChecker"], [2, 1, 1, "", "DoxyChecker"], [2, 1, 1, "", "Finding"], [2, 1, 1, "", "JUnitChecker"], [2, 1, 1, "", "PolyspaceChecker"], [2, 1, 1, "", "PolyspaceFamilyChecker"], [2, 1, 1, "", "RobotChecker"], [2, 1, 1, "", "RobotSuiteChecker"], [2, 1, 1, "", "SphinxChecker"], [2, 1, 1, "", "WarningsChecker"], [2, 5, 1, "", "WarningsConfigError"], [2, 1, 1, "", "WarningsPlugin"], [2, 1, 1, "", "XMLRunnerChecker"], [2, 6, 1, "", "warnings_wrapper"]], "mlx.warnings.CoverityChecker": [[2, 2, 1, "", "check"], [2, 3, 1, "", "cq_description_template"], [2, 3, 1, "", "cq_findings"], [2, 4, 1, "", "name"], [2, 2, 1, "", "parse_config"], [2, 4, 1, "", "pattern"], [2, 2, 1, "", "return_check_limits"], [2, 2, 1, "", "return_count"]], "mlx.warnings.DoxyChecker": [[2, 4, 1, "", "name"], [2, 4, 1, "", "pattern"]], "mlx.warnings.Finding": [[2, 3, 1, "", "check_name"], [2, 3, 1, "", "column"], [2, 3, 1, "", "fingerprint"], [2, 4, 1, "", "fingerprints"], [2, 3, 1, "", "line"], [2, 3, 1, "", "path"], [2, 3, 1, "", "severity"], [2, 2, 1, "", "to_dict"]], "mlx.warnings.JUnitChecker": [[2, 2, 1, "", "check"], [2, 4, 1, "", "name"], [2, 3, 1, "", "name_repr"], [2, 2, 1, "", "prepare_tree"]], "mlx.warnings.PolyspaceChecker": [[2, 2, 1, "", "check"], [2, 4, 1, "", "checkers"], [2, 3, 1, "", "cq_description_template"], [2, 3, 1, "", "cq_findings"], [2, 3, 1, "", "maximum"], [2, 3, 1, "", "minimum"], [2, 4, 1, "", "name"], [2, 2, 1, "", "parse_config"], [2, 2, 1, "", "return_check_limits"], [2, 2, 1, "", "return_count"]], "mlx.warnings.PolyspaceFamilyChecker": [[2, 2, 1, "", "add_code_quality_finding"], [2, 2, 1, "", "check"], [2, 4, 1, "", "code_quality_severity"], [2, 3, 1, "", "cq_description_template"], [2, 4, 1, "", "logging_fmt"], [2, 4, 1, "", "name"]], "mlx.warnings.RobotChecker": [[2, 2, 1, "", "check"], [2, 3, 1, "", "ignored_testsuites"], [2, 4, 1, "", "logging_fmt"], [2, 3, 1, "", "maximum"], [2, 3, 1, "", "minimum"], [2, 4, 1, "", "name"], [2, 2, 1, "", "parse_config"], [2, 2, 1, "", "return_check_limits"], [2, 2, 1, "", "return_count"]], "mlx.warnings.RobotSuiteChecker": [[2, 2, 1, "", "check"], [2, 4, 1, "", "logging_fmt"], [2, 4, 1, "", "name"], [2, 3, 1, "", "suite_name_repr"]], "mlx.warnings.SphinxChecker": [[2, 2, 1, "", "include_sphinx_deprecation"], [2, 4, 1, "", "name"], [2, 4, 1, "", "pattern"], [2, 4, 1, "", "sphinx_deprecation_regex"], [2, 4, 1, "", "sphinx_deprecation_regex_in_match"]], "mlx.warnings.WarningsChecker": [[2, 2, 1, "", "add_patterns"], [2, 2, 1, "", "check"], [2, 3, 1, "", "cq_description_template"], [2, 3, 1, "", "cq_findings"], [2, 3, 1, "", "is_sub_checker"], [2, 4, 1, "", "logging_fmt"], [2, 3, 1, "", "maximum"], [2, 3, 1, "", "minimum"], [2, 4, 1, "", "name"], [2, 3, 1, "", "name_repr"], [2, 2, 1, "", "parse_config"], [2, 2, 1, "", "return_check_limits"], [2, 2, 1, "", "return_count"]], "mlx.warnings.WarningsPlugin": [[2, 2, 1, "", "activate_checker"], [2, 2, 1, "", "activate_checker_name"], [2, 2, 1, "", "check"], [2, 2, 1, "", "check_logfile"], [2, 2, 1, "", "config_parser"], [2, 2, 1, "", "configure_maximum"], [2, 2, 1, "", "configure_minimum"], [2, 2, 1, "", "get_checker"], [2, 2, 1, "", "return_check_limits"], [2, 2, 1, "", "return_count"], [2, 2, 1, "", "toggle_printout"], [2, 2, 1, "", "write_code_quality_report"]], "mlx.warnings.XMLRunnerChecker": [[2, 4, 1, "", "name"], [2, 4, 1, "", "pattern"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "terms": {"": [1, 2, 5], "0": [2, 5], "1": [2, 5], "10": 5, "11": 2, "14": 2, "15": 2, "2": 5, "20": 2, "3": 2, "5": 5, "8": 5, "A": [2, 5], "As": 5, "Be": 5, "By": 5, "For": 5, "If": [1, 2, 5, 6], "In": [1, 5, 6], "It": [1, 5, 6], "Its": 5, "No": [2, 5], "Not": 5, "The": [1, 2, 5], "Then": 5, "There": [1, 5], "These": [2, 5], "To": 5, "_element": 2, "_io": 2, "about": [1, 5], "abstract": 2, "accept": 5, "access": 5, "account": 5, "acht": 0, "act": 1, "action": 5, "activ": [2, 5], "activate_check": 2, "activate_checker_nam": 2, "ad": [2, 5], "add": [2, 5], "add_code_quality_find": 2, "add_pattern": 2, "addit": [2, 5], "adher": 1, "adjust": 5, "adopt": 2, "affect": 5, "after": [1, 2, 5], "against": 5, "all": [1, 2, 6], "allow": [2, 5], "allow_unconfigur": 5, "alreadi": 2, "also": [1, 5], "alter": 2, "altern": 5, "altogeth": 5, "alwai": 6, "amount": [2, 5], "an": [1, 2, 4, 5], "analysi": 5, "ani": [1, 4, 5], "annot": 5, "anyon": [1, 5], "anyth": 2, "ar": [1, 2, 4, 5], "arg": 2, "argument": 5, "arn": 2, "arrai": 2, "artifact": [2, 5], "aspect": 1, "attribut": [2, 5], "author": 3, "avail": [4, 5], "awar": [4, 5], "back": 5, "backport": 6, "backslash": 5, "base": [2, 4, 5], "basi": 5, "basic": [1, 5], "bavo": 0, "becaus": 5, "befor": 2, "behav": 1, "behavior": 5, "belong": 5, "below": 5, "benefit": 1, "besid": 5, "best": 1, "better": 5, "between": 5, "bit": 1, "bool": 2, "boolean": 5, "border": 1, "both": 5, "branch": [4, 5], "breach": 6, "bring": 1, "bug": [1, 5], "byte": 2, "c": 5, "call": 5, "can": [1, 2, 5, 6], "cannot": 5, "care": 5, "case": [1, 2, 4, 5, 6], "cell": 5, "certain": 5, "chanc": 5, "chang": 5, "charact": 5, "check": [1, 2], "check_logfil": 2, "check_nam": 2, "check_suite_nam": [2, 5], "check_valu": 2, "checker": [2, 5], "checker_typ": 2, "checkernam": 5, "ci": 5, "cid": [2, 5], "class": 3, "classif": [2, 5], "classnam": 2, "cli": 5, "climat": [2, 5], "clone": 4, "code": [2, 3], "code_qu": 5, "code_quality_sever": 2, "codequ": 5, "col": 5, "collis": 2, "colomn": 2, "color": 5, "column": [2, 5], "column_nam": 2, "com": [1, 4, 5, 6], "command": [2, 3, 4, 6], "comment": 5, "compat": 5, "compil": 2, "comput": 5, "concaten": [2, 5], "conduct": 3, "conf": 5, "config": [2, 5], "config_pars": 2, "configur": [2, 3], "configuration_fil": 5, "configure_maximum": 2, "configure_minimum": 2, "confirm": 1, "consid": 5, "consider": 5, "consist": [2, 5], "consol": 5, "constant": 1, "contain": [2, 5], "content": 2, "continu": 5, "contribut": 3, "contributor": 1, "convent": 2, "convert": 2, "correctli": 1, "correspond": [2, 5], "could": [5, 6], "count": 2, "counted_defect": 5, "counter": 5, "cov": 5, "cover": 2, "coverag": 1, "coverity_fil": 5, "coveritycheck": 2, "cq_default_path": 5, "cq_description_templ": [2, 5], "cq_enabl": 2, "cq_find": 2, "craegh": 0, "creat": [2, 5], "critic": 2, "crt": 0, "csv": [2, 5], "curr": 2, "current": [2, 5, 6], "custom": 5, "d": [2, 5], "data": 6, "debug": 2, "decis": 1, "default": [2, 5], "defin": [2, 5], "demonstr": 5, "depend": 5, "describ": 5, "descript": [2, 5], "description1": 2, "design": 3, "desir": 1, "desktop": 5, "detail": [1, 5], "detect": 5, "determin": [2, 5], "develop": [1, 5], "diagram": 3, "dict": 2, "dictionari": 2, "did": 5, "diff": 5, "differ": 5, "dir": 5, "direct": [4, 5], "directli": 5, "directori": 5, "discard": 5, "do": [1, 5], "doc": [1, 5], "doc_log": 5, "document": [3, 5], "doe": [2, 5, 6], "doesn": 5, "doxycheck": 2, "doxyfil": 5, "doxygen": 2, "due": 5, "e": [4, 5], "each": [2, 5], "easi": 1, "edit": 4, "ee": 2, "effect": 5, "effort": 6, "either": 5, "element": 2, "elementtre": 2, "els": [1, 2], "en": 1, "enabl": [2, 5], "encod": 2, "encourag": 5, "end": 2, "enhanc": 1, "enough": 1, "environ": [1, 5], "equal": 5, "error": 2, "escap": 5, "etre": 2, "even": [1, 5], "everi": [1, 5], "everyon": 1, "everywher": 2, "exact": 5, "exampl": [2, 3], "except": 2, "excit": 1, "execut": [5, 6], "exist": [1, 2, 5], "exit": [2, 5], "exit1": 5, "expans": 5, "expect": [1, 2], "explicitli": 5, "export": 2, "export_opt": 5, "express": [2, 5], "extract": 2, "ey": 1, "fail": [2, 5], "failur": 2, "fallback": 5, "fals": [2, 5], "false_posit": 5, "famili": [2, 5], "family_valu": 2, "far": 4, "fast": 5, "faster": 5, "featur": 3, "feel": 1, "few": [1, 5], "field": 5, "file": [2, 3, 6], "file_path": 5, "find": [2, 5], "finder": 5, "fingerprint": [2, 5], "first": 5, "fit": 1, "fix": [1, 6], "flag": 5, "flexibl": 5, "flow": 1, "focu": 1, "follow": [2, 5], "fork": 2, "form": 5, "format": 5, "forward": 5, "found": [2, 5], "framework": 2, "frequent": 1, "fresh": 1, "from": [1, 2, 4, 5], "function": [1, 2, 5], "futur": 1, "g": 5, "gener": [2, 5], "get": [2, 3, 5], "get_check": 2, "getter": 2, "git": [4, 5], "github": [1, 4, 5, 6], "gitlab": 5, "given": [2, 5], "global": 5, "go": 1, "group": 5, "guid": [3, 5], "h": 5, "ha": 5, "handl": [3, 5], "happi": 1, "hash": [2, 5], "have": [1, 4, 5, 6], "hear": 5, "hell": 5, "help": [1, 5], "heselman": 0, "hide": 6, "high": [2, 5], "highest": 2, "home": 5, "host": 5, "hostnam": 5, "how": 5, "howev": 6, "http": [1, 4, 5, 6], "i": [0, 1, 2, 4, 5, 6], "id": 5, "identifi": [2, 5], "ignor": [2, 5], "ignored_testsuit": 2, "impact": [2, 5, 6], "implement": [1, 2], "import": 5, "improv": 1, "includ": [1, 2, 5, 6], "include_sphinx_deprec": 2, "inclus": 1, "index": 3, "indic": [1, 5], "individu": 5, "infinit": 5, "info": 2, "inform": 5, "infront": 4, "initi": [2, 5], "input": [2, 5, 6], "insid": 5, "instal": 3, "instanc": 2, "instead": 5, "instruct": 5, "instrument": 3, "int": 2, "integr": 5, "intend": 1, "intent": 5, "intimid": 1, "invoc": 4, "invok": 5, "involv": 5, "irrelev": 5, "is_sub_check": 2, "issu": [3, 4, 6], "its": 6, "jasper": 0, "jenkinsci": 5, "job": 5, "json": [2, 5, 6], "junit": 2, "junit_output": 5, "junitcheck": 2, "junitpars": 2, "junitxml": 2, "just": [1, 5], "justifi": 5, "keep": [1, 5], "kei": [2, 5], "know": 1, "label": 1, "last": 5, "latest": 6, "learn": 1, "less": 5, "let": 5, "level": [1, 2], "like": 5, "limit": [2, 5], "line": [2, 3, 4], "line1": 2, "line2": 2, "list": [2, 5], "local": 5, "locat": 2, "log": 5, "logging_arg": 2, "logging_fmt": 2, "look": [1, 5], "low": [2, 5], "lowercas": 5, "lowest": 2, "lxml": 2, "m": [2, 5], "mai": [1, 5], "main": [2, 5], "mainli": 0, "maintain": 0, "major": [2, 6], "make": [1, 6], "mani": 5, "mark": 5, "master": 4, "matter": [1, 5], "max": [2, 5], "max_doxy_warn": 5, "max_sphinx_warn": 5, "maximum": [2, 5], "md5": 5, "mean": 5, "medium": [2, 5], "melexi": [0, 2, 4, 5, 6], "merg": 1, "messag": [2, 5], "might": [1, 5], "min": [2, 5], "min_doxy_warn": 5, "mind": 5, "minimum": [2, 5], "minor": 2, "miss": [2, 5], "mlx": [2, 4], "mode": 2, "modifi": 5, "modul": [3, 5], "more": [1, 2, 5], "mori": 0, "most": 1, "multilin": 2, "multipl": 5, "my": 5, "n": 2, "name": [2, 5], "name_repr": 2, "need": [1, 2, 4, 5], "new": [2, 3], "nn": 2, "none": 2, "note": [2, 5], "now": 5, "number": [2, 5], "o": 5, "object": 2, "oblig": 1, "obtain": 2, "obviou": 1, "occur": 2, "offer": 4, "ok": 5, "older": 6, "onc": [1, 4], "one": 5, "onelin": 5, "onli": [5, 6], "open": [1, 2, 4, 5], "option": [3, 6], "orang": [2, 5], "org": 1, "other": 3, "otherwis": [2, 5], "otic": 2, "our": [1, 2, 5], "out": 5, "out_fil": 2, "output": [2, 5, 6], "own": 1, "p": 2, "packag": [4, 5], "page": 3, "pair": 2, "paramet": [2, 5], "pars": [2, 6], "parse_config": 2, "pass": [2, 3], "path": [2, 5], "path1": 2, "pattern": [2, 5], "pattern_contain": 2, "pend": 5, "peopl": 1, "per": 5, "percentag": 1, "pick": 1, "pip": 5, "pip3": [4, 5], "pipe": 3, "place": 6, "plai": 5, "plain": 2, "plan": 5, "pleas": [1, 2, 4, 5, 6], "plugin": [0, 1, 2, 3, 4, 6], "polici": [1, 3], "polit": 1, "polyspac": 2, "polyspace_access_opt": 5, "polyspace_sub": 2, "polyspacecheck": 2, "polyspacefamilycheck": 2, "posit": 5, "possibl": [1, 5, 6], "potenti": 6, "practic": 6, "prefer": 1, "prepar": 2, "prepare_tre": 2, "present": 1, "previou": 5, "previous": 2, "print": [2, 5], "printout": 2, "problem": [1, 4, 5], "process": [2, 5], "produc": [2, 5], "product": 5, "program": 1, "progress": 1, "project": 5, "properli": 1, "properti": 2, "propos": 6, "prover": 5, "provid": [2, 5], "pull": [1, 6], "py": 5, "pypi": 4, "python": [1, 2, 4, 5], "python3": 5, "qualiti": [2, 3], "r2024a": 5, "rais": [2, 5], "rather": 1, "raw_defect": 5, "re": 2, "red": [2, 5], "redirect": 5, "regex": 2, "regexcheck": 2, "regist": 2, "regress": 1, "regular": 5, "rel": 2, "releas": [4, 5], "remain": 5, "rememb": 1, "removedinsphinx": [2, 5], "repeat": 2, "replic": 6, "report": [2, 3], "repositori": [1, 2, 5], "repres": [2, 5], "request": [3, 6], "requir": 5, "resid": 5, "resolv": 5, "respons": 2, "result": 2, "resultsfold": 5, "return": [2, 5], "return_check_limit": 2, "return_count": 2, "review": 3, "right": 2, "robot": 2, "robot_sub": 2, "robotcheck": 2, "robotsuitecheck": 2, "root": 2, "root_input": 2, "row": [2, 5], "rror": 2, "run": [3, 4], "runid": 5, "same": [1, 5], "save": 5, "script": [2, 5], "search": 3, "second": 5, "secur": 3, "see": 5, "self": 2, "separ": 5, "set": [2, 5], "sever": [2, 5], "severity1": 2, "severity2": 2, "shell": 5, "should": [1, 5], "silent": 2, "simpl": [3, 4], "simpli": 5, "sinc": [1, 5, 6], "singl": 5, "skill": 1, "so": [1, 2, 4, 5], "softwar": 3, "some": [1, 5, 6], "someon": 1, "soon": 1, "sourc": [2, 5], "spec": [2, 5], "special": 5, "specif": [2, 5], "specifi": [2, 5], "sphinx": 2, "sphinx_deprecation_regex": 2, "sphinx_deprecation_regex_in_match": 2, "sphinxcheck": 2, "standard": 1, "start": [3, 5], "static": [2, 5], "statu": 5, "status": 5, "stderr": 5, "stdout": 5, "stein": 0, "step": 2, "still": 5, "storag": 2, "str": 2, "stream": 5, "string": [3, 5], "strive": 1, "structur": 5, "style": 5, "sub": 2, "submodul": 5, "subset": 2, "success": 5, "suggest": [1, 5], "suit": [2, 5], "suite_nam": 2, "suite_name_repr": 2, "sum": 2, "suppli": 5, "support": [3, 5], "sure": 6, "syntax": 5, "system": [5, 6], "systemexit": 2, "t": 5, "tab": 5, "tag": 2, "taken": 5, "target": [1, 2, 5], "task": 1, "tdummy_file_nam": 5, "tdummy_funct": 5, "tee": 5, "templat": [2, 5], "test": [1, 2], "testsuit": 2, "text": [2, 5], "textiowrapp": 2, "than": 1, "thei": [1, 5], "them": [1, 5], "thi": [1, 2, 5], "those": 5, "three": 5, "threshold": 5, "through": [5, 6], "time": [1, 5], "titl": 5, "to_dict": 2, "toctre": 5, "togeth": 5, "toggl": 2, "toggle_printout": 2, "tool": 5, "top": 2, "traceabl": 5, "tracker": 6, "transient": 5, "treat": 5, "tree": 2, "triag": 5, "true": [2, 5], "tsv": [2, 5], "tsv_file": 5, "two": 5, "txt": 5, "type": [2, 5], "u": [1, 5], "unclassifi": 5, "under": 5, "understand": 1, "uniqu": [2, 5], "until": 2, "up": 1, "updat": 6, "upload": 5, "us": [1, 2, 5, 6], "usag": 3, "useabl": 5, "util": 5, "valid": 5, "valu": [2, 5], "value_to_check": 2, "valueerror": 2, "van": 0, "variabl": 5, "variou": [1, 5], "verbos": 2, "verifi": 5, "version": [3, 4, 5], "via": 5, "view": 1, "violat": 2, "virtual": 5, "virtualenv": 5, "vulner": 3, "w": 2, "wai": [5, 6], "want": [1, 2, 5], "warn": [0, 1, 2, 3, 4, 6], "warnings_wrapp": 2, "warningscheck": 2, "warningsconfigerror": 2, "warningsplugin": 2, "we": [1, 2, 4, 5, 6], "welcom": 1, "well": [2, 5], "were": 5, "when": [1, 2, 5], "where": [1, 2], "whether": [2, 5], "which": [1, 2, 5], "within": [2, 5], "without": 5, "won": 5, "work": 1, "would": 5, "write": 5, "write_code_quality_report": 2, "ww": 2, "x": 2, "xml": [2, 5], "xmlrunner": 2, "xmlrunner_log": 5, "xmlrunnercheck": 2, "xunit": 5, "yaml": [2, 5], "year": 1, "yet": 5, "yml": [2, 5], "you": [1, 4, 5, 6], "your": [1, 5, 6], "yourcommand": 5, "z": 2, "za": 2}, "titles": ["Authors", "Contribution Guide", "Software Design", "Contents", "Installation Guide", "Command Line Warnings Plugin", "Security Policy"], "titleterms": {"With": 5, "all": 5, "author": 0, "check": 5, "class": 2, "code": [1, 5], "command": 5, "conduct": 1, "configur": 5, "content": 3, "contribut": [1, 5], "count": 5, "cover": 5, "defect": 5, "deprec": 5, "design": 2, "diagram": 2, "document": 1, "doxygen": 5, "error": 5, "exampl": 5, "exclud": 5, "export": 5, "failur": 5, "featur": [1, 5], "file": 5, "framework": 5, "get": 1, "guid": [1, 4], "handl": 2, "indic": 3, "instal": [4, 5], "instrument": 2, "issu": [1, 5], "junit": 5, "line": 5, "match": 5, "mlx": 5, "modul": 2, "new": [1, 5], "option": 5, "other": 5, "pars": 5, "pass": 5, "pipe": 5, "plugin": 5, "polici": 6, "polyspac": 5, "qualiti": [1, 5], "regex": 5, "report": [1, 5, 6], "request": 1, "result": 5, "review": 1, "robot": 5, "run": 5, "secur": 6, "simpl": 5, "softwar": 2, "sphinx": 5, "start": 1, "store": 5, "string": 2, "support": 6, "tabl": 3, "test": 5, "usag": 5, "version": 6, "vulner": 6, "warn": 5, "xmlrunner": 5}})